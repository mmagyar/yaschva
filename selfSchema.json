{
  "$schema": "./schema.json",
  "$types": {
    "$customType": { "$keyOf": ["$types"] },
    "$customObjectType": {
      "$keyOf": ["$types"],
      "valueType": ["$objectType", "$customObjectType", "$objectOnlyMetaType"]
    },
    "$customTypeDef": {
      "\\$types": [
        "?",
        {
          "key": { "$string": { "regex": "^\\$([a-zA-Z0-9_]{1,128})$" } },
          "$map": "$valueTypes"
        }
      ]
    },
    "$optionalPositiveInteger": [
      "?",
      { "$number": { "min": 0, "integer": true } }
    ],
    "$simpleTypes": {
      "$enum": ["string", "boolean", "number", "integer", "null", "?", "any"]
    },
    "$enumType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$enum": { "minLength": 1, "$array": "string" }
    },
    "$objectType": {
      "key": { "$string": { "regex": "^(?!\\$).*" } },
      "$map": "$valueTypes"
    },
    "$arrayType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array": "$valueTypes"
    },
    "$stringType": {
      "\\$string": [
        {
          "minLength": "$optionalPositiveInteger",
          "maxLength": "$optionalPositiveInteger"
        },
        { "regex": ["?", "string"] }
      ]
    },
    "$numberType": {
      "\\$number": {
        "min": ["?", "number"],
        "max": ["?", "number"],
        "integer": ["?", "boolean"]
      }
    },
    "$metaType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": "$valueTypes"
    },
    "$objectOnlyMetaType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": ["$objectType", "$objectOnlyMetaType", "$customObjectType"]
    },
    "$mapType": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType", "$keyOfType", "$customType"],
      "keySpecificType": ["?", { "$map": "$valueTypes" }, "$customType"],
      "\\$map": "$valueTypes"
    },
    "$keyOfType": {
      "valueType": ["?", "$valueTypes"],
      "\\$keyOf": [
        { "$array": "?", "minLength": 0, "maxLength": 0 },
        { "$array": { "$keyOf": [] }, "minLength": 1, "maxLength": 1 },
        { "$array": "string", "minLength": 2 }
      ]
    },
    "$literalType": { "\\$literal": ["string", "number", "null"] },
    "$andType": {
      "\\$and": {
        "$array": ["$objectOnlyMetaType", "$objectType", "$customObjectType"]
      }
    },
    "$tupleType": { "\\$tuple": { "$array": "$valueTypes", "minLength": 1 } },
    "$valueType": [
      "$simpleTypes",
      "$enumType",
      "$objectType",
      "$arrayType",
      "$stringType",
      "$numberType",
      "$metaType",
      "$mapType",
      "$keyOfType",
      "$literalType",
      "$andType",
      "$customType",
      "$tupleType"
    ],
    "$valueTypes": [{ "$array": "$valueType", "minLength": 1 }, "$valueType"],
    "$validation": [
      "$simpleTypes",
      "$enumType",
      "$literalType",
      {
        "$map": "$valueTypes",
        "key": { "$string": { "regex": "(^(?!\\$).*)|(\\$types)" } },
        "keySpecificType": "$customTypeDef"
      },
      { "$and": ["$customTypeDef", "$arrayType"] },
      { "$and": ["$customTypeDef", "$stringType"] },
      { "$and": ["$customTypeDef", "$numberType"] },
      { "$and": ["$customTypeDef", "$metaType"] },
      { "$and": ["$customTypeDef", "$mapType"] },
      { "$and": ["$customTypeDef", "$andType"] },
      { "$and": ["$customTypeDef", "$tupleType"] },
      { "minLength": 1, "$array": "$valueType" }
    ]
  },
  "$type": "$validation"
}
