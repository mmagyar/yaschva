{
  "$schema": "./schema.json",
  "$types": {
    "$customType": { "$keyOf": ["$types"] },

    "$customTypeDefObjectKeyOf": {
      "$keyOf": ["$types"],
      "valueType": ["$objectTypeKeyOf", "$objectOnlyMetaTypeKeyOf"]
    },

    "$customTypeDefObject": {
      "$keyOf": ["$types"],
      "valueType": ["$objectType", "$objectOnlyMetaType"]
    },


    "$customTypeDef": {
      "\\$types": [
        "?",
        {
          "key": { "$string": { "regex": "^\\$([a-zA-Z0-9_]{1,128})$" } },
          "$map": "$valueTypes"
        }
      ]
    },
    "$customTypeDefKeyOf": {
      "\\$types": [
        "?",
        {
          "key": { "$string": { "regex": "^\\$([a-zA-Z0-9_]{1,128})$" } },
          "$map": "$valueTypesKeyOf"
        }
      ]
    },

    "$optionalPositiveInteger": [
      "?",
      { "$number": { "min": 0, "integer": true } }
    ],

    "$simpleTypes": {
      "$enum": ["string", "boolean", "number", "integer", "null", "?", "any"]
    },
    "$simpleTypesNoOptional": {
      "$enum": ["string", "boolean", "number", "integer", "null", "any"]
    },
    "$enumType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$enum": { "minLength": 1, "$array": "string" }
    },

    "$objectType": {
      "key": { "$string": { "regex": "^(?!\\$).*" } },
      "$map": "$valueTypes"
    },
    
    "$objectTypeWithoutCustom": {
      "key": { "$string": { "regex": "^(?!\\$).*" } },
      "$map": "$valueTypesWithoutCustom"
    },
    "$objectTypeKeyOf": {
      "key": { "$string": { "regex": "^(?!\\$).*" } },
      "$map": "$valueTypesKeyOf"
    },

    "$arrayType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array": "$valueTypesNoOptional"
    },  
    "$arrayTypeWithoutCustom": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array": "$valueTypesWithoutCustomNoOptional"
    },  
    "$arrayTypeKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array": "$valueTypesKeyOfNoOptional"
    },
    "$arrayTypeRootCanHaveKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array":  [
        "$rootCanHaveKeyOf", { "$array": "$rootCanHaveKeyOf", "minLength": 1 }]
    }, 
    "$arrayTypeRootCanNotHaveKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "\\$array":  [
        "$rootCanNotHaveKeyOfNoOptional", { "$array": "$rootCanNotHaveKeyOfNoOptional", "minLength": 1 }]
    },

    "$stringType": {
      "\\$string": [
        {
          "minLength": "$optionalPositiveInteger",
          "maxLength": "$optionalPositiveInteger"
        },
        { "regex": ["?", "string"] }
      ]
    },

    "$numberType": {
      "\\$number": {
        "min": ["?", "number"],
        "max": ["?", "number"],
        "integer": ["?", "boolean"]
      }
    },

    "$metaType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": "$valueTypes"
    },
    "$metaTypeWithoutCustom": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": "$valueTypesWithoutCustom"
    },
    "$metaTypeKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": "$valueTypesKeyOf"
    },
    "$metaTypeRootCanHaveKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": [
        "$rootCanHaveKeyOf", { "$array": "$rootCanHaveKeyOf", "minLength": 1 }]
    },  
    "$metaTypeRootCanNotHaveKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": [
        "$rootCanNotHaveKeyOf", { "$array": "$rootCanNotHaveKeyOf", "minLength": 1 }]
    },

    "$objectOnlyMetaType": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": ["$objectType", "$objectOnlyMetaType"]
    },
    "$objectOnlyMetaTypeWithoutCustom": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": ["$objectTypeWithoutCustom", "$objectOnlyMetaTypeWithoutCustom"]
    },
    "$objectOnlyMetaTypeKeyOf": {
      "name": ["?", "string"],
      "description": ["?", "string"],
      "\\$type": ["$objectTypeKeyOf", "$objectOnlyMetaTypeKeyOf", "$customTypeDefObjectKeyOf"]
    },

    "$mapType": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType", "$customType"],
      "keySpecificType": ["?", { "$map": "$valueTypes" }, "$customTypeDefObject"],
      "\\$map": "$valueTypesNoOptional"
    },
    "$mapTypeWithoutCustom": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType"],
      "keySpecificType": ["?", { "$map": "$valueTypesWithoutCustom" }],
      "\\$map": "$valueTypesWithoutCustomNoOptional"
    },
    "$mapTypeKeyOf": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType", "$keyOfType", "$customType"],
      "keySpecificType": ["?", { "$map": "$valueTypesKeyOf" },"$customTypeDefObjectKeyOf"],
      "\\$map": "$valueTypesKeyOfNoOptional"
    },   
    "$mapTypeRootCanKeyOf": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType", "$customType"],
      "keySpecificType": ["?", { "$map": "$valueTypes" }, "$customTypeDefObject"],
      "\\$map": [
        "$rootCanHaveKeyOf", { "$array": "$rootCanHaveKeyOf", "minLength": 1 }]
    },
    "$mapTypeRootCanNotKeyOf": {
      "minLength": "$optionalPositiveInteger",
      "maxLength": "$optionalPositiveInteger",
      "key": ["?", "$stringType", "$enumType", "$customType"],
      "keySpecificType": ["?", { "$map": "$valueTypes" }, "$customTypeDefObject"],
      "\\$map": [
        "$rootCanNotHaveKeyOfNoOptional", { "$array": "$rootCanNotHaveKeyOfNoOptional", "minLength": 1 }]
    },

    "$keyOfType": {
      "valueType": ["?", 
        { "$array": "$valueTypeKeyOfNoOptional", "minLength": 1 }, "$valueTypeKeyOfNoOptional"   ],
      "\\$keyOf": {"$propertyPath":{ "onlyObjects": true }}
    },

    "$propertyPathType": {
      "\\$propertyPath": { "onlyObjects": ["?", "boolean"] }
    },

    "$literalType": { "\\$literal": ["string", "number", "null"] },

    "$andType": {
      "\\$and": {
        "$array": ["$objectOnlyMetaType", "$objectType", "$customTypeDefObject"]
      }
    },
    "$andTypeWithoutCustom": {
      "\\$and": {
        "$array": ["$objectOnlyMetaTypeWithoutCustom", "$objectTypeWithoutCustom"]
      }
    },
    "$andTypeKeyOf": {
      "\\$and": {
        "$array": ["$objectOnlyMetaTypeKeyOf", "$objectType", "$customTypeDefObjectKeyOf"]
      }
    },

    "$tupleType": { "\\$tuple": { "$array": "$valueTypes", "minLength": 1 } },
    "$tupleTypeWithoutCustom": { "\\$tuple": { "$array": "$valueTypesWithoutCustom", "minLength": 1 } },
    "$tupleTypeKeyOf": { "\\$tuple": { "$array": "$valueTypesKeyOf", "minLength": 1 } },
    "$tupleTypeRootCanHaveKeyOf": { "\\$tuple": { "$array":  [
      "$rootCanHaveKeyOf", { "$array": "$rootCanHaveKeyOf", "minLength": 1 }], "minLength": 1 } },
    "$tupleTypeRootCanNotHaveKeyOf": { "\\$tuple": { "$array": [
      "$rootCanNotHaveKeyOf", { "$array": "$rootCanNotHaveKeyOf", "minLength": 1 }], "minLength": 1 } },

    "$rootCanHaveKeyOf": [
      "$objectTypeKeyOf",
      "$arrayTypeKeyOf",
      "$metaTypeKeyOf",
      "$mapTypeKeyOf",
      "$andTypeKeyOf",
      "$tupleTypeKeyOf",
      "$customType"
    ],
    "$rootCanNotHaveKeyOf": [
      "$simpleTypes",
      "$enumType",
      "$stringType",
      "$numberType",
      "$literalType",
      "$customType",
      "$metaType",
      "$tupleType",
      "$arrayType",
      "$mapType",
      "$andType",     
      "$objectType"
    ],

    "$rootCanNotHaveKeyOfNoOptional": [
      "$simpleTypesNoOptional",
      "$enumType",
      "$stringType",
      "$numberType",
      "$literalType",
      "$customType",
      "$metaType",
      "$tupleType",
      "$arrayType",
      "$mapType",
      "$andType",     
      "$objectType"
    ],

    "$valueType": [
      "$simpleTypes",
      "$enumType",
      "$objectType",
      "$arrayType",
      "$stringType",
      "$numberType",
      "$metaType",
      "$mapType",
      "$literalType",
      "$andType",     
      "$tupleType",      
      "$customType"
    ],

    "$valueTypeWithoutCustom": [
      "$simpleTypes",
      "$enumType",
      "$objectTypeWithoutCustom",
      "$arrayTypeWithoutCustom",
      "$stringType",
      "$numberType",
      "$metaTypeWithoutCustom",
      "$mapTypeWithoutCustom",
      "$literalType",
      "$andTypeWithoutCustom",     
      "$tupleTypeWithoutCustom"
    ],
    "$valueTypeKeyOf": [
      "$simpleTypes",
      "$enumType",
      "$stringType",
      "$numberType",
      "$literalType",
      "$keyOfType",
      "$customType",
      "$propertyPathType",
      "$objectTypeKeyOf",
      "$arrayTypeKeyOf",
      "$metaTypeKeyOf",
      "$mapTypeKeyOf",
      "$tupleTypeKeyOf",
      "$andTypeKeyOf"
      ],
      "$valueTypeNoOptional": [
        "$simpleTypesNoOptional",
        "$enumType",
        "$objectType",
        "$arrayType",
        "$stringType",
        "$numberType",
        "$metaType",
        "$mapType",
        "$literalType",
        "$andType",     
        "$tupleType",      
        "$customType"
      ],
  
      "$valueTypeWithoutCustomNoOptional": [
        "$simpleTypesNoOptional",
        "$enumType",
        "$objectTypeWithoutCustom",
        "$arrayTypeWithoutCustom",
        "$stringType",
        "$numberType",
        "$metaTypeWithoutCustom",
        "$mapTypeWithoutCustom",
        "$literalType",
        "$andTypeWithoutCustom",     
        "$tupleTypeWithoutCustom"
      ],
      "$valueTypeKeyOfNoOptional": [
        "$simpleTypesNoOptional",
        "$enumType",
        "$stringType",
        "$numberType",
        "$literalType",
        "$keyOfType",
        "$customType",
        "$propertyPathType",
        "$objectTypeKeyOf",
        "$arrayTypeKeyOf",
        "$metaTypeKeyOf",
        "$mapTypeKeyOf",
        "$tupleTypeKeyOf",
        "$andTypeKeyOf"
        ],
    "$valueTypes": [{ "$array": "$valueType", "minLength": 1 }, "$valueType"],
    "$valueTypesWithoutCustom": [{ "$array": "$valueTypeWithoutCustom", "minLength": 1 }, "$valueTypeWithoutCustom"],
    "$valueTypesKeyOf": [{ "$array": "$valueTypeKeyOf", "minLength": 1 }, "$valueTypeKeyOf"],

    "$valueTypesNoOptional": [{ "$array": "$valueTypeNoOptional", "minLength": 1 }, "$valueTypeNoOptional"],
    "$valueTypesWithoutCustomNoOptional": [{ "$array": "$valueTypeWithoutCustomNoOptional", "minLength": 1 }, "$valueTypeWithoutCustomNoOptional"],
    "$valueTypesKeyOfNoOptional": [{ "$array": "$valueTypeKeyOfNoOptional", "minLength": 1 }, "$valueTypeKeyOfNoOptional"]

   
  },
  "$type": [
    "$simpleTypesNoOptional",
    "$enumType",
    "$literalType",
    {
      "$map": "$valueTypesKeyOf",
      "key": { "$string": { "regex": "(^(?!\\$).*)" } },
      "keySpecificType": "$customTypeDefKeyOf"
    },
    { "$and": ["$customTypeDefKeyOf", "$arrayTypeRootCanHaveKeyOf"] },
    { "$and": ["$customTypeDefKeyOf", "$mapTypeRootCanKeyOf"] },
    { "$and": ["$customTypeDefKeyOf", "$andTypeKeyOf"] },
    { "$and": ["$customTypeDefKeyOf", "$metaTypeRootCanHaveKeyOf"] },
    { "$and": ["$customTypeDefKeyOf", "$tupleTypeRootCanHaveKeyOf"] },
    { "$and": ["$customTypeDef", "$metaTypeRootCanNotHaveKeyOf"] },
    { "$and": ["$customTypeDef", "$tupleTypeRootCanNotHaveKeyOf"] },
    { "$and": ["$customTypeDef", "$arrayTypeRootCanNotHaveKeyOf"] },
    { "$and": ["$customTypeDef", "$mapTypeRootCanNotKeyOf"] },
    { "$and": ["$customTypeDef", "$stringType"] },
    { "$and": ["$customTypeDef", "$numberType"] },
    { "minLength": 1, "$array":  "$valueTypesWithoutCustom" }
  ]
}
